services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB} 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - networkop
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    restart: always
    depends_on:
      - db
    volumes:
      - ../backend:/app
      - ${STATIC_GLOBAL}:/app/static
      - ${STATIC_RESOURCE}:/app/recu
      - ${STATIC_WWW}:/app/www
    ports:
      - "8000:8000"
    environment:
      - STATIC_WWW=${STATIC_WWW}
      - STATIC_RESOURCE=${STATIC_RESOURCE}
      - STATIC_GLOBAL=${STATIC_GLOBAL}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    env_file:
      - .env
    command: >
       sh -c "if [ ! -f manage.py ]; then django-admin startproject project_configs .; fi && python manage.py runserver 0.0.0.0:8000"
    networks:
      - networkop
networks:
  networkop:
    driver: bridge
volumes:
  postgres_data:
